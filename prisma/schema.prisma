// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
enum CategoriaTipo {
  receita
  despesa
  ambos
}

enum TransacaoTipo {
  receita
  despesa
}

enum Frequencia {
  diario
  semanal
  mensal
  anual
}

model Usuario {
  id          String      @id @default(uuid())
  senha       String
  email       String      @unique
  nome        String
  avatarUrl   String?
  criadoEm   DateTime    @default(now())
  atualizadoEm DateTime    @updatedAt

  categorias  Categoria[]
  transacoes  Transacao[]
  metas       Meta[]
  transacoesRecorrentes TransacaoRecorrente[]
}

model Categoria {
  id          String      @id @default(uuid())
  user        Usuario     @relation(fields: [userId], references: [id])
  userId      String
  nome        String
  cor         String
  icone       String
  tipo        CategoriaTipo
  criadoEm   DateTime    @default(now())

  transacoes  Transacao[]
  transacoesRecorrentes TransacaoRecorrente[]
}

model Transacao {
  id          String      @id @default(uuid())
  user        Usuario     @relation(fields: [userId], references: [id])
  userId      String
  categoria   Categoria?  @relation(fields: [categoriaId], references: [id])
  categoriaId String?
  tipo        TransacaoTipo
  valor       Decimal     @db.Decimal(10,2)
  descricao   String?
  data        DateTime
  tags        String[]
  anexos      String[]
  isRecorrente Boolean    @default(false)
  recorrente  TransacaoRecorrente? @relation(fields: [recorrenteId], references: [id])
  recorrenteId String?
  meta        Meta?       @relation(fields: [metaId], references: [id])
  metaId      String?
  criadoEm   DateTime    @default(now())
  atualizadoEm DateTime    @updatedAt
}

model TransacaoRecorrente {
  id          String      @id @default(uuid())
  user        Usuario     @relation(fields: [userId], references: [id])
  userId      String
  categoria   Categoria?  @relation(fields: [categoriaId], references: [id])
  categoriaId String?
  tipo        TransacaoTipo
  valor       Decimal     @db.Decimal(10,2)
  descricao   String?
  frequencia  Frequencia
  dataInicio  DateTime
  dataFim     DateTime?
  isActive    Boolean     @default(true)
  criadoEm   DateTime    @default(now())

  transacoes  Transacao[]
}

model Meta {
  id            String   @id @default(uuid())
  user          Usuario  @relation(fields: [userId], references: [id])
  userId        String
  nome          String
  valorAlvo     Decimal  @db.Decimal(10,2)
  currentAmount Decimal  @db.Decimal(10,2) @default(0)
  dataAlvo      DateTime
  isCompleted   Boolean  @default(false)
  criadoEm      DateTime @default(now())

  transacoes    Transacao[]
}